# Generated by Django 5.2.6 on 2025-09-15 20:45

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trips', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_date', models.DateField()),
                ('total_driving_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('total_on_duty_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('total_off_duty_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4)),
                ('total_sleeper_berth_time', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4)),
                ('vehicle_id', models.CharField(blank=True, max_length=50)),
                ('odometer_start', models.PositiveIntegerField(blank=True, null=True)),
                ('odometer_end', models.PositiveIntegerField(blank=True, null=True)),
                ('starting_location', models.JSONField(blank=True, help_text="{'lat': float, 'lng': float, 'address': str}", null=True)),
                ('ending_location', models.JSONField(blank=True, help_text="{'lat': float, 'lng': float, 'address': str}", null=True)),
                ('is_hos_compliant', models.BooleanField(default=True)),
                ('hos_violations', models.JSONField(blank=True, help_text='List of HOS violations if any', null=True)),
                ('is_certified', models.BooleanField(default=False)),
                ('certification_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_logs', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='daily_logs', to='trips.trip')),
            ],
            options={
                'verbose_name': 'Daily Log',
                'verbose_name_plural': 'Daily Logs',
                'ordering': ['-log_date'],
                'unique_together': {('driver', 'log_date')},
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('location', models.JSONField(blank=True, help_text="{'lat': float, 'lng': float, 'address': str}", null=True)),
                ('remarks', models.TextField(blank=True)),
                ('odometer_reading', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('daily_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_entries', to='eld_logs.dailylog')),
            ],
            options={
                'verbose_name': 'Log Entry',
                'verbose_name_plural': 'Log Entries',
                'ordering': ['start_time'],
            },
        ),
    ]
